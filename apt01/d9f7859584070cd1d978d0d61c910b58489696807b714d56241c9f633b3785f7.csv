push
mov
sub
push
push
push
jz
jnz
loop
test
std
inc
mov
xor
lea
rep
stosw
stosb
jz
jnz
loopz
test
inc
mov
xor
lea
rep
stosw
stosb
jz
jnz
out
inc
cld
add
add
jz
jnz
clc
jz
jnz
in
add
add
lea
push
push
call
jz
jnz
mov
add
call
sbb
add
add
jz
jnz
les
call
inc
cld
push
push
push
push
push
push
lea
push
push
call
jz
jnz
and
inc
repnz
not
add
push
lea
push
push
push
push
lea
push
call
add
push
mov
push
call
jz
jnz
in
push
cld
push
call
jz
jnz
out
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
jz
jnz
loop
test
sti
inc
mov
xor
lea
rep
stosw
stosb
jz
jnz
in
add
push
push
push
lea
push
call
add
push
call
mov
jz
jnz
in
jge
add
xor
jmp
jz
jnz
out
add
add
sub
add
push
clc
push
call
mov
jz
jnz
jmp
inc
jnz
jz
jnz
out
inc
clc
push
call
jz
jnz
loopz
shr
add
add
test
add
add
test
add
add
mov
jz
jnz
and
call
push
adc
inc
or
mov
push
call
mov
jz
jnz
out
jge
add
jz
jnz
in
xchg
hlt
sti
call
adc
jz
jnz
out
inc
clc
push
call
jz
jnz
loop
shr
jz
jnz
jmp
call
adc
jz
jnz
out
push
clc
push
call
jz
jnz
in
add
add
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
jz
jnz
loop
test
sti
inc
add
add
test
add
add
test
add
add
mov
jz
jnz
out
inc
cld
add
add
jz
jnz
out
test
sti
inc
mov
xor
lea
rep
stosw
stosb
jz
jnz
in
pushf
xor
lea
push
call
add
push
mov
push
call
add
mov
jz
jnz
in
mov
or
xor
repnz
not
add
mov
jz
jnz
clc
cmp
jnz
xor
jmp
jz
jnz
loop
xchg
clc
sti
inc
push
cld
mov
jz
jnz
mov
clc
sti
call
dec
or
add
hlt
sti
dec
test
add
add
test
add
add
cmp
jnz
jz
jnz
mov
add
add
test
add
add
test
add
add
push
lea
push
call
add
jz
jnz
clc
lea
or
xor
repnz
not
add
push
lea
push
mov
push
call
add
test
jz
jz
jnz
and
shr
add
add
test
add
add
test
add
add
inc
add
jz
jnz
in
mov
or
xor
repnz
not
add
push
push
lea
push
call
add
push
mov
push
call
add
test
jnz
jz
jnz
and
add
add
jmp
lea
or
xor
repnz
not
add
push
push
lea
push
call
add
push
mov
push
call
add
test
jnz
jz
jnz
in
dec
or
add
add
add
test
add
add
test
add
add
inc
repnz
not
add
mov
add
push
call
add
mov
mov
jmp
lea
or
xor
repnz
not
add
push
push
lea
push
call
add
push
mov
push
call
add
test
jnz
jz
jnz
loopz
dec
or
add
add
add
test
add
add
test
add
add
mov
mov
add
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
jmp
xor
jmp
jz
jnz
out
add
add
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
jz
jnz
clc
mov
mov
xor
lea
rep
stosw
stosb
jz
jnz
mov
inc
mov
xor
lea
rep
stosw
stosb
jz
jnz
les
call
add
add
call
jz
jnz
out
add
add
lea
push
lea
push
call
jz
jnz
jmp
inc
add
add
test
add
add
test
add
add
push
mov
push
call
add
mov
cmp
jz
jz
jnz
in
lea
inc
lea
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
jmp
jz
jnz
out
shr
add
add
test
add
add
test
add
add
push
push
lea
push
mov
push
push
call
test
jz
jz
jnz
and
shr
add
add
test
add
add
test
add
add
jz
jnz
mov
add
ror
rep
jz
jnz
and
lea
push
call
add
mov
cmp
jnz
xor
jmp
jz
jnz
les
inc
push
sal
not
add
mov
jz
jnz
mov
inc
repnz
not
add
sub
push
lea
push
lea
push
call
add
jz
jnz
clc
mov
xor
mov
mov
mov
jz
jnz
mov
add
call
xchg
add
or
std
inc
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
jz
jnz
out
test
add
add
test
add
add
mov
jz
jnz
out
add
call
in
call
jmp
test
dec
test
add
add
test
add
add
push
lea
push
lea
push
call
mov
jz
jnz
loop
lea
call
xchg
push
std
call
xchg
add
pop
add
add
test
add
add
mov
push
call
jz
jnz
loopz
lea
call
pop
add
pop
add
add
test
add
add
mov
mov
xor
lea
rep
jz
jnz
out
inc
lock
add
xor
mov
mov
mov
jz
jnz
and
test
add
jz
jnz
mov
inc
add
add
test
add
add
test
add
add
mov
jz
jnz
clc
lea
push
lea
push
push
push
push
push
push
push
lea
push
push
call
test
jnz
jz
jnz
mov
jz
jnz
clc
jz
jnz
loop
inc
push
call
jz
jnz
out
dec
hlt
push
call
jz
jnz
clc
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
jz
jnz
clc
mov
mov
xor
lea
rep
stosw
stosb
jz
jnz
and
test
add
mov
xor
lea
rep
jz
jnz
in
test
inc
mov
xor
lea
rep
stosw
stosb
jz
jnz
clc
mov
jz
jnz
mov
inc
add
add
test
add
add
test
add
add
call
jz
jnz
out
test
add
add
test
add
add
push
lea
push
call
add
jz
jnz
loopz
add
add
lea
push
lea
push
call
add
test
jnz
jz
jnz
out
mov
add
jz
jnz
and
shr
add
add
test
add
add
test
add
add
push
call
jz
jnz
out
test
rol
test
test
add
add
test
add
add
jmp
lea
push
lea
push
call
add
test
jnz
jz
jnz
out
mov
add
jz
jnz
in
shr
add
add
test
add
add
test
add
add
push
call
jz
jnz
mov
inc
mov
test
add
add
test
add
add
jmp
jz
jnz
in
lea
mov
dec
dec
inc
inc
cmp
jz
sub
cmp
jz
sub
cmp
jz
jmp
jz
jnz
mov
add
add
test
add
add
test
add
add
mov
imul
push
call
jz
jnz
jmp
jz
jnz
and
call
cwde
clc
inc
pop
add
add
test
add
add
push
call
jz
jnz
jmp
add
jnz
in
leave
std
dec
test
add
add
test
add
add
xor
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
jz
jnz
jmp
and
inc
add
add
call
push
call
push
call
jz
jnz
in
pop
pop
pop
ret
push
mov
sub
push
push
push
jz
jnz
loopz
inc
or
mov
jz
jnz
loop
push
or
push
hlt
movsx
xor
mov
jz
jnz
in
inc
clc
add
add
jmp
mov
add
mov
mov
cmp
jge
jz
jnz
les
clc
movsx
xor
mov
add
mov
jz
jnz
clc
jmp
jz
jnz
out
inc
or
inc
clc
mov
jz
jnz
in
inc
or
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
