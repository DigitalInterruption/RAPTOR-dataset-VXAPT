aad
int1
ja
pop
int1
ja
pop
int1
ja
int1
ja
pop
int1
ja
lodsd
ja
ins
int1
ja
pop
int1
ja
mov
int1
ja
outs
int1
ja
add
add
push
cmp
jl
xor
cmp
jl
add
jl
wait
cmp
add
adc
jae
mov
jae
jns
jae
jns
jae
jns
jae
xlat
jecxz
pop
loop
sbb
out
sahf
loop
push
loop
test
loop
jle
in
jle
in
inc
jns
jae
ja
jae
loop
mov
fnsave
retf
out
js
out
les
fnsave
xchg
out
mov
scasb
out
shr
fidiv
hlt
fnsave
mov
out
mov
fbstp
push
out
jnp
loop
stosb
fidiv
or
fidiv
imul
jae
push
in
xchg
scasd
fidiv
fnsave
push
out
daa
and
jae
sbb
jae
sbb
jae
in
loop
les
jae
pop
fnsave
cmp
jae
xor
jae
fidiv
fidiv
fsubr
jae
jns
jae
loop
inc
mov
fnsave
imul
jnz
fnsave
push
out
jp
fidiv
fsubrp
jae
out
jae
fnsave
push
out
and
jae
leave
out
add
out
jnp
out
jle
in
jle
in
mov
or
jae
or
jae
or
fnsave
mov
jae
sbb
jae
adc
jae
or
fnsave
adc
jae
sbb
jae
push
out
lodsb
ins
fnsave
cmp
jae
sub
jae
sbb
jae
in
jae
or
jae
sub
jae
adc
jae
fnsave
in
jae
wait
in
and
jae
shl
jae
sbb
jae
push
jecxz
dec
fnsave
pusha
fnsave
pop
fnsave
retf
enter
sub
pop
jecxz
jmp
fnsave
push
out
jmp
fnsave
retf
fnsave
jmp
jae
jmp
jae
jns
jae
jns
jae
xlat
jecxz
adc
jae
adc
jae
cmp
jae
add
jae
sub
jae
mov
jae
fcmovu
jae
fcmovnu
jae
inc
fnsave
out
fnsave
pusha
fnsave
jmp
rep
fnsave
inc
fnsave
fucom
jae
mov
jae
fcmovnu
jae
out
pop
out
pushf
adc
jae
out
jae
out
xchg
out
push
push
fnsave
cld
fnsave
and
jae
js
jae
js
jae
fnsave
cdq
jecxz
mov
xchg
jecxz
lahf
retf
fnsave
in
jae
cdq
jecxz
movsd
pop
fnsave
xchg
jecxz
adc
fnsave
mov
fnsave
mov
jae
cmp
jae
salc
fnsave
xlat
jecxz
adc
jae
adc
jae
stosd
fidiv
scasb
fidiv
xor
jae
sub
jae
xchg
out
xchg
mov
jae
movsd
out
add
fnsave
xchg
out
mov
fnsave
fnsave
lodsb
out
stosd
stosd
out
push
cmpsb
out
mov
fnsave
mov
jae
shl
sub
fnsave
sub
jae
adc
jae
out
adc
loop
push
fnsave
adc
jae
or
jae
adc
jae
sbb
jae
lahf
out
dec
and
jae
xchg
fidiv
pop
fnsave
jecxz
salc
loop
cmp
out
add
fidiv
mov
jae
mov
jae
aam
jae
inc
fnsave
and
add
add
jmp
sal
ret
ja
salc
les
and
ja
int1
sal
sal
ret
ja
out
les
sub
ret
ja
dec
ret
ja
dec
ret
ja
sahf
ret
ja
pop
ret
ja
scasb
les
stosb
les
jno
ja
stc
ret
ja
or
ja
pop
ja
daa
ret
sbb
ja
js
ja
and
ja
ret
xor
ja
jno
ja
pusha
les
jnp
ja
jl
ja
sbb
ja
ret
add
add
int1
xlat
ja
aam
push
mov
ja
mov
ja
aam
rcl
push
mov
ja
add
add
add
add
aas
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
imul
jnz
inc
imul
add
add
inc
inc
jb
arpl
inc
outs
arpl
add
xor
add
mov
mov
mov
mov
mov
cmp
jnz
mov
ret
push
mov
add
pusha
xor
lea
mov
rep
xor
lea
mov
rep
mov
jmp
push
mov
add
mov
lea
push
push
push
call
mov
call
cmp
jnz
leave
ret
push
lea
push
lea
push
call
call
ja
xor
xor
pop
push
call
mov
call
loopz
mov
add
rol
jl
add
mov
or
in
jmp
add
aaa
or
jp
add
int
sbb
add
fild
add
add
aas
add
aaa
push
push
call
movzx
mov
add
jmp
push
push
push
call
lea
push
push
call
test
jnz
mov
cmp
jnz
cmp
jnz
push
pop
push
lea
push
lea
push
call
mov
mov
mov
cmp
jnz
cmp
jnz
cmp
jnz
cmp
jnz
push
pop
mov
mov
jmp
cmp
jnz
mov
mov
jmp
mov
mov
push
lea
push
push
call
test
jz
jmp
mov
cmp
jbe
mov
xor
mov
lea
push
push
lea
push
call
mov
push
call
mov
push
push
push
call
mov
mov
lea
push
call
cmp
jnz
lea
push
call
or
jnz
jmp
mov
mov
mov
mov
lea
push
pop
push
lea
push
push
call
or
jnz
mov
cmp
jle
mov
add
mov
cmp
jbe
mov
xor
lea
push
push
lea
push
call
cmp
jnz
push
call
lea
mov
mov
mov
lea
push
call
cmp
jnz
lea
push
call
test
jz
mov
mov
mov
mov
mov
push
push
push
push
push
call
test
jz
push
push
push
push
push
call
test
jz
cmp
jz
cmp
jz
jmp
jmp
call
inc
dec
dec
dec
inc
inc
push
and
and
push
push
das
xor
xor
pop
lea
lea
push
push
push
call
push
push
push
push
call
push
push
push
push
push
call
test
jz
add
push
push
push
push
push
push
call
cmp
jnz
jmp
add
jmp
pop
cmp
jz
cmp
jnz
lea
xor
push
call
mov
mov
add
cmp
jnz
push
push
push
push
push
call
xor
push
lea
push
push
push
call
add
add
cmp
jnz
push
lea
push
push
push
push
call
push
cld
mov
lea
lea
repz
jz
pop
mov
jmp
pop
push
lea
push
push
push
push
call
test
jz
push
push
push
push
call
mov
push
push
push
push
push
call
or
jnz
push
push
push
call
jmp
push
mov
push
lea
push
push
push
call
add
sub
jnz
pop
push
push
pop
push
call
pop
push
push
push
call
push
call
mov
push
call
add
jmp
leave
ret
push
mov
push
push
mov
mov
mov
xor
xor
mov
add
cmp
jz
add
add
add
jmp
mov
cmp
jz
mov
mov
add
add
sub
jmp
mov
movzx
movzx
pop
pop
leave
ret
push
mov
add
pusha
mov
mov
push
pop
mov
mov
xor
mov
mov
cmp
jnz
lea
push
push
push
lea
push
push
call
cmp
jbe
push
push
push
push
cmp
jnz
call
jmp
call
cmp
jge
popa
xor
leave
ret
add
add
sub
cmp
jnz
popa
mov
leave
ret
push
mov
add
push
push
push
push
push
mov
xor
xchg
mov
add
mov
add
mov
add
add
mov
mov
add
lea
lodsd
add
stosd
mov
lodsd
add
push
stosd
mov
mov
add
mov
pop
mov
mov
cmp
jnz
xor
pop
pop
pop
pop
pop
leave
ret
push
mov
add
xchg
mov
push
xor
scasb
jnz
pop
sub
push
cld
xor
dec
mov
xor
xor
lodsb
xor
mov
mov
mov
mov
shr
rcr
jae
xor
xor
dec
jnz
xor
xor
dec
jnz
not
not
mov
rol
mov
pop
cmp
jz
pop
add
add
jmp
pop
mov
shl
add
xor
xchg
mov
shl
add
xchg
mov
add
pop
pop
pop
pop
pop
leave
ret
mov
push
mov
pusha
mov
mov
add
mov
cld
rep
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
mov
nop
mov
stosb
jae
out
aaa
das
jmp
call
int1
shr
adc
daa
cli
fisubr
sbb
mov
sar
add
mov
mov
call
add
xchg
mov
call
mov
mov
xor
xor
mov
mov
xor
xor
add
xchg
mov
call
add
xchg
mov
call
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
add
add
add
mov
call
add
xchg
mov
call
mov
mov
add
mov
lodsd
bswap
stosd
sub
jnz
lea
mov
sub
rep
xor
mov
mov
movzx
mov
movzx
add
call
add
mov
mov
movzx
mov
movzx
add
call
add
add
cmp
jl
xor
mov
mov
rep
popa
leave
ret
push
mov
pusha
cld
mov
mov
mov
add
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
lea
add
mov
mov
mov
mov
mov
call
add
xchg
mov
call
add
xchg
sub
jnz
mov
mov
and
or
bswap
xor
rol
mov
bswap
and
xor
bswap
mov
rol
or
bswap
xor
xor
add
sub
jnz
mov
mov
call
add
xchg
mov
call
add
xchg
sub
jnz
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
popa
leave
ret
push
mov
pusha
cld
mov
mov
mov
add
mov
mov
xor
xor
mov
mov
mov
mov
xor
xor
mov
mov
lea
sub
mov
mov
mov
mov
mov
call
sub
xchg
mov
call
sub
xchg
sub
jnz
mov
mov
and
or
bswap
xor
rol
mov
bswap
and
xor
bswap
mov
rol
or
bswap
xor
xor
sub
sub
jnz
mov
mov
call
sub
xchg
mov
call
sub
xchg
sub
jnz
mov
mov
mov
mov
xor
xor
xor
xor
mov
mov
mov
mov
popa
leave
ret
nop
mov
xor
xlat
ror
xlat
rol
ror
xlat
ror
rol
ror
xlat
xor
rol
xor
rol
xor
rol
xor
xor
mov
xor
xlat
rol
ror
xlat
ror
rol
ror
xlat
ror
xlat
ror
mov
xor
ror
xor
xor
mov
xor
rol
xor
xor
xor
ret
lea
mov
and
jz
shr
mov
and
mov
shl
mov
add
mov
and
mov
push
shl
mov
pop
neg
add
shr
xor
bswap
mov
add
and
mov
shr
xor
bswap
mov
jmp
shr
mov
and
mov
bswap
mov
add
and
mov
bswap
mov
ret
jo
sub
mov
shl
test
jmp
xchg
inc
sbb
dec
sbb
mov
pop
into
xor
pop
pop
lds
sbb
inc
pop
cmp
push
push
ins
dec
mov
mov
jz
sub
mov
cdq
fisttp
xor
jbe
ins
mov
xor
pop
add
adc
cmp
sbb
sbb
setl
push
sbb
and
inc
iret
mov
mov
xchg
and
call
push
stosb
shl
xchg
push
pop
push
xchg
loopnz
rcl
les
dec
mov
add
fimul
aas
fst
dec
nop
xor
div
popf
jg
loop
wait
fsub
enter
adc
cmpsd
mov
cmc
stc
mov
std
mov
js
push
push
inc
jno
aam
stosd
inc
mov
mov
or
dec
sub
cmp
movsb
inc
sub
jnp
leave
inc
rcl
sbb
pop
push
pop
sub
jl
jl
jl
or
pop
push
outs
das
outs
das
adc
and
adc
xor
add
and
add
adc
xor
add
and
adc
and
add
xor
push
mov
push
push
mov
mov
mov
mov
mov
rol
rol
add
add
mov
mov
sub
jae
mov
sub
jae
mov
mov
mov
pop
pop
leave
ret
push
mov
mov
mov
mov
rol
rol
add
add
mov
mov
sub
jae
mov
sub
jae
mov
mov
mov
pop
ret
lea
rdtsc
xchg
xor
imul
add
mov
add
cmp
jb
fld1
fstp
mov
mov
call
push
mov
call
sub
jnz
pop
mov
mov
sub
call
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
call
popa
jbe
jo
xor
add
xchg
and
dec
call
outs
jz
ins
ins
add
xchg
and
dec
call
jnz
jb
xor
call
mov
push
push
push
call
push
lea
push
push
call
mov
call
out
mov
add
or
or
cld
mov
mov
mov
mov
cmp
movsd
imul
cwde
jz
or
dec
mov
jg
iret
mov
int
cwde
mov
add
fisttp
lodsd
add
or
xor
sbb
mov
mov
outs
and
add
or
fild
pop
add
or
inc
popf
test
xor
dec
pop
mov
sub
popa
add
sbb
xor
ins
add
int1
frstor
or
js
ja
mov
and
jnz
scasd
add
test
or
add
or
cli
ror
inc
add
or
call
or
aam
sahf
xor
or
cmp
mov
ror
cmp
leave
sahf
pop
ror
cmp
inc
mov
sub
or
inc
mov
adc
add
or
fstp
cmp
pop
popa
fcom
cld
or
add
add
mov
inc
movzx
push
push
push
call
movzx
mov
add
jmp
call
pop
add
lea
movzx
movzx
add
add
push
push
push
push
call
pop
add
cmp
jnz
add
mov
cmp
jz
movzx
movzx
add
mov
add
jmp
push
lea
push
lea
push
call
cmp
jnz
push
lea
push
mov
add
call
push
push
push
call
call
push
call
sub
mov
cmp
jnz
lea
push
lea
push
push
push
push
push
push
push
lea
push
push
call
jmp
call
popa
jbe
popa
arpl
call
push
push
push
call
push
push
call
mov
push
push
push
call
or
jnz
push
push
push
call
mov
lea
push
push
push
call
mov
call
cmp
jz
push
call
cmp
jz
lea
call
pop
sub
call
fld
push
add
in
popf
add
add
add
add
add
add
or
add
add
add
add
movzx
mov
cmp
jz
movzx
add
add
jmp
cmp
jz
push
call
push
call
jmp
call
pop
sub
push
push
lea
push
call
popa
leave
ret
add
add
jnz
push
popa
jz
sbb
add
inc
push
push
inc
push
inc
pop
inc
ins
popa
jae
jae
push
jae
ins
ins
pop
outs
jo
outs
pop
arpl
ins
popa
outs
push
add
add
jz
popa
jb
pop
dec
imul
jz
inc
arpl
and
jz
jo
dec
outs
jae
popa
ins
ins
and
ins
jo
outs
outs
jz
pop
cli
or
add
xor
xor
xor
nop
add
adc
xor
jnz
jns
push
imul
push
add
xor
jnz
jns
push
imul
xor
jnz
jns
push
imul
mov
jnz
jns
push
imul
nop
pop
mov
add
add
add
rol
add
inc
pop
add
outs
imul
add
add
inc
add
add
outs
ins
jae
jb
js
sti
add
add
popa
jno
xor
or
add
add
add
in
mov
cmp
jle
push
call
cmp
jnz
mov
cmp
jle
lea
push
lea
push
call
or
jz
lea
push
call
cmp
jnz
push
push
call
cmp
jnz
push
call
cmp
jnz
lea
push
push
push
push
push
push
call
cmp
jnz
cmp
jnz
lea
push
push
push
push
push
push
call
push
call
leave
ret
add
push
add
mov
push
push
lea
push
call
mov
add
push
call
js
ins
outs
jb
jb
js
add
xchg
lds
add
or
jnz
push
call
mov
jmp
push
push
push
call
cmp
jz
mov
push
push
push
push
call
call
fld
push
add
in
popf
add
add
add
add
add
add
or
add
add
add
add
movzx
mov
cmp
jz
movzx
add
add
jmp
mov
cmp
jz
movzx
movzx
add
add
push
push
push
push
push
push
push
call
pop
pop
mov
pop
add
jmp
push
push
push
push
call
lea
push
push
push
push
push
push
push
call
push
push
call
pop
cmp
jz
leave
ret
rol
cmp
push
mov
add
push
push
mov
push
push
push
push
push
call
push
lea
push
push
push
push
push
call
pop
pop
pop
leave
ret
lds
wait
add
in
add
push
mov
push
push
call
mov
mov
lea
push
push
call
jmp
push
lea
push
call
or
jnz
dec
cmp
ja
push
call
mov
pop
leave
ret
lea
push
push
call
cmp
jz
push
call
xor
pop
leave
ret
int1
add
push
mov
add
push
push
push
push
push
mov
mov
push
push
lea
push
call
mov
lea
push
push
push
lea
push
push
call
mov
lea
push
lea
push
push
push
push
push
call
push
call
push
lea
push
call
mov
mov
add
cmp
jnz
push
lea
push
push
call
mov
or
jnz
mov
cmp
jnz
mov
jmp
add
push
call
jmp
push
push
push
call
cmp
jz
mov
jmp
lea
push
lea
push
push
push
push
push
push
push
lea
push
push
call
push
pop
push
push
push
push
call
call
fld
push
add
in
popf
add
add
add
add
add
add
or
add
add
add
add
movzx
mov
cmp
jz
movzx
add
add
jmp
cmp
jz
push
push
push
push
call
mov
push
push
push
push
call
lea
push
push
push
push
push
push
push
call
push
push
call
push
call
pop
cmp
jz
pop
pop
pop
pop
pop
leave
ret
